---
title: "Data Dictionary"
format:
  html:
    embed-resources: true
editor: visual
---

<br><br><br>

```{r, warning=F, message=F, include=F}
library( htmltools )
library( dplyr )
library( pointblank )
library( knitr )
```

<?xml version='1.0' encoding='UTF-8' ?>

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="svglite" width="288.00pt" height="288.00pt" viewBox="0 0 288.00 288.00">

<defs>

```{=html}
<style type='text/css'><![CDATA[
    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {
      fill: none;
      stroke: #000000;
      stroke-linecap: round;
      stroke-linejoin: round;
      stroke-miterlimit: 10.00;
    }
    .svglite text {
      white-space: pre;
    }
  ]]></style>
```
</defs> <rect width='100%' height='100%' style='stroke: none; fill: #FFFFFF;'/> <defs> <clipPath id='cpMC4wMHwyODguMDB8MC4wMHwyODguMDA='> <rect x='0.00' y='0.00' width='288.00' height='288.00' /> </clipPath> </defs> <g clip-path='url(#cpMC4wMHwyODguMDB8MC4wMHwyODguMDA=)'> </g> <defs> <clipPath id='cpNTkuMDR8MjU3Ljc2fDU5LjA0fDIxNC41Ng=='> <rect x='59.04' y='59.04' width='198.72' height='155.52' /> </clipPath> </defs> <g clip-path='url(#cpNTkuMDR8MjU3Ljc2fDU5LjA0fDIxNC41Ng==)'> <rect x='66.40' y='185.57' width='23.00' height='23.23' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> <rect x='89.40' y='83.38' width='23.00' height='125.42' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> <rect x='112.40' y='83.38' width='23.00' height='125.42' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> <rect x='135.40' y='69.45' width='23.00' height='139.35' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> <rect x='158.40' y='64.80' width='23.00' height='144.00' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> <rect x='181.40' y='125.19' width='23.00' height='83.61' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> <rect x='204.40' y='180.93' width='23.00' height='27.87' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> <rect x='227.40' y='180.93' width='23.00' height='27.87' style='stroke-width: 0.75; stroke: #FFFFFF; fill: #4682B4;' /> </g>

</svg>

```{r, results="asis", include=F}

containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
  v <- 
  tagList(
    
    div( class="parent",
      div( class="div1", p( paste0( vname, ".........." ) ) ),
      div( class="div2", p( vlabel ) ), 
      div( class="div3", withTags(
        table(
                tr(
                    td( "DATA TYPE: " ),
                    td( vtype  )
                  ),
                tr(
                    td( "SCOPE: "  ),
                    td( vscope  )
                  )
             )
      ) ),
      div( class="div4", withTags(
        table(
                tr(
                    td( "DESCRIPTION: " ),
                    td( vdesc )
                  ),
                tr(
                    td( "LOCATION CODE: " ),
                    td( lcode )
                  )
             )
    ) )
    ),
    withTags(  HTML("<br><hr><br>"), p('\n')  )
  )
  return(v)
} 
```

```{r, include=F}
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )

# remove special characters that will 
# wreck table formatting like ($) 
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )

# use location codes if family code is missing 
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <- 
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]

# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
```

```{r, results="asis", echo=F}
#| output: asis

rlist <- list()

withTags( 
  div( h2( paste( forms, part, sep = " " ) )
  )
)

for( i in 1:nrow(d) )
{
  vname   <- d$VARIABLE_NAME[i] 
  vlabel  <- d$LABEL[i] 
  vtype   <- d$DATA_TYPE_SIMPLE[i] 
  vscope  <- d$VARIABLE_SCOPE[i] 
  vdesc   <- d$DESCRIPTION[i]
  lcode   <- d$LOCATION_CODE_FAMILY[i]
  
  var.info <- 
  containerize_v( vname=vname, 
                  vlabel=vlabel, 
                  vtype=vtype, 
                  vscope=vscope, 
                  vdesc=vdesc,
                  lcode=lcode) 

  rlist[[i]] <- var.info

}

renderTags( rlist )$html
```

<link href='https://fonts.googleapis.com/css?family=Fira Code' rel='stylesheet'> <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Anonymous+Pro" />

```{=html}
<style>

@import url('https://fonts.cdnfonts.com/css/aharoni');

.parent {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: auto;
    grid-column-gap: 5px;
    grid-row-gap: 5px;
    grid-template-areas:
      "a b b"
      "c d d"
      ". e e" ;
}

.div1 {
    grid-area: a;
    padding-left: 5px;
}

.div2 { 
    grid-area: b;
    padding-left: 5px;
}

.div3 { 
    grid-area: c;
    padding-left: 5px;
}

.div4 { 
    grid-area: d;
    padding-left: 5px;
}

.div1 p { 
    font-family:"Calibri", sans-serif;
    color: orange;
    font-size: 1em;
}

.div2 p { 
    font-family:"Calibri", sans-serif;
    color: orange;
    font-size: 1em;
}

.div3 table { width: 100%; }

.div3 td { 
    font-family:"Calibri", sans-serif;
    font-size: 1em;
}

.div4 table { width: 100%; }

.div4 td { 
    font-family:"Calibri", sans-serif;
    font-size: 1em;
}

h2 { 
    font-family:"Calibri", sans-serif;
    font-size: 2em;
    background-color: gray;
    color: white;
}

.table>tbody {
    border-top: none;
}

.table>:not(caption)>*>* {
    padding: 0rem 0rem;
}

tbody, tfoot, tr, td, th {
    border-color: inherit;
    border-style: none; 
    border-width: 0;
}

#pb_agent .gt_table {
    border-top-width: 0px; 
    /* border-top-color: #A8A8A8; */
}  

#pb_agent .gt_title {
    font-size: 1.3em !important;
}

#pb_agent .gt_left { color: black !important; }

</style>
```
