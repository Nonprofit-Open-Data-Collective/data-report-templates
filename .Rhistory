vscope=vscope,
vdesc=vdesc,
lcode=lcode)
rlist[[i]] <- var.info
}
renderTags( rlist )$html
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
# use this generic table for the factor levels
flevels <-
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")
# create div4
create_div4( d,
x1="DESCRIPTION", x1.label="DESCRIPTION",
x2="LOCATION_CODE_FAMILY", x2.label="LOCATION CODE",
x3="FLEVELS")
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
# use this generic table for the factor levels
flevels <-
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")
# create div4
create_div4 <- function (vdesc, lcode)
{
v <-
tagList(
div( class="div4", withTags(
table(
tr(
td( "DESCRIPTION: " ),
td( vdesc )
),
#             tr(
#                td( "VARIABLE LEVELS: "),
#               td( flevels )
#            ),
tr(
td( "LOCATION CODE: " ),
td( lcode )
)
)
) )
)
return(v)
}
#| output: asis
rlist <- list()
for( i in 1:nrow(d) )
{
vdesc   <- d$DESCRIPTION[i]
#flevels <- flevels
lcode   <- d$LOCATION_CODE_FAMILY[i]
var.info <-
create_div4( vdesc=vdesc,
#             flevels=flevels,
lcode=lcode)
rlist[[i]] <- var.info
}
renderTags( rlist )$html
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
# use this generic table for the factor levels
flevels <-
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")
# create div4
create_div4 <- function (vdesc, lcode)
{
v <-
tagList(
div( class="div4", withTags(
table(
tr(
td( "DESCRIPTION: " ),
td( vdesc )
),
tr(
td( "VARIABLE LEVELS: "),
td( flevels )
),
tr(
td( "LOCATION CODE: " ),
td( lcode )
)
)
) )
)
return(v)
}
#| output: asis
rlist <- list()
for( i in 1:nrow(d) )
{
vdesc   <- d$DESCRIPTION[i]
lcode   <- d$LOCATION_CODE_FAMILY[i]
var.info <-
create_div4( vdesc=vdesc,
lcode=lcode)
rlist[[i]] <- var.info
}
renderTags( rlist )$html
table(flevels)
table( flevels ) %>% kable()
flevels$FLEVEL
flevels$LABEL
table( flevels$FLEVEL, flevels$LABEL )
td( flevels$FLEVEL )
table( flevels$FLEVEL ) %>% kable()
flevels$FLEVEL
iris$Species
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels$FLEVEL
to_table( f, format="pipe" )
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL, flevels$LABEL )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels$FLEVEL, flevels$LABEL
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL, flevels$LABEL )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels
to_table( f, format="pipe" )
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels
to_table( f, format="pipe" )
flevels$FLEVEL
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL )
t1 <- table( flevels$LABEL )
t2 <- as.data.frame(t, t1)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels
to_table( f, format="pipe" )
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL )
t1 <- table( flevels$LABEL )
t2 <- as.data.frame(t, t1)
names(t2) <- c("Level","Labels")
t2 %>% kable( format )
}
f <- flevels
to_table( f, format="pipe" )
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels
to_table( f, format="pipe" )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
# use this generic table for the factor levels
flevels <-
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")
# create div4
create_div4 <- function (vdesc, lcode)
{
v <-
tagList(
div( class="div4", withTags(
table(
tr(
td( "DESCRIPTION: " ),
td( vdesc )
),
tr(
#td( "VARIABLE LEVELS: "),
td( flevels$FLEVEL ),
td( flevels$LABEL )
),
tr(
td( "LOCATION CODE: " ),
td( lcode )
)
)
) )
)
return(v)
}
#| output: asis
rlist <- list()
for( i in 1:nrow(d) )
{
vdesc   <- d$DESCRIPTION[i]
lcode   <- d$LOCATION_CODE_FAMILY[i]
var.info <-
create_div4( vdesc=vdesc,
lcode=lcode)
rlist[[i]] <- var.info
}
renderTags( rlist )$html
to_table <- function( f, format="html" )
{
t <- table( iris$Species )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- iris$Species
to_table( f, format="pipe" )
to_table <- function( f, format="html" )
{
t <- table( flevels$LABEL )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels$LABEL
to_table( f, format="pipe" )
table( flevels ) %>% kable( format="pipe" )
View(flevels)
flevels
table(flevels)
flevels$combined <- paste( flevels$FLEVEL, flevels$LABEL, sep=" " )
flevels$combined
table(flevels$combined)
View(flevels)
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
# use this generic table for the factor levels
flevels <-
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")
# create div4
create_div4 <- function (vdesc, lcode)
{
v <-
tagList(
div( class="div4", withTags(
table(
tr(
td( "DESCRIPTION: " ),
td( vdesc )
),
tr(
td( "VARIABLE LEVELS: "),
),
tr(
td( table( flevels ) %>% kable( format="html" ) ),
),
tr(
td( "LOCATION CODE: " ),
td( lcode )
)
)
) )
)
return(v)
}
#| output: asis
rlist <- list()
for( i in 1:nrow(d) )
{
vdesc   <- d$DESCRIPTION[i]
lcode   <- d$LOCATION_CODE_FAMILY[i]
var.info <-
create_div4( vdesc=vdesc,
lcode=lcode)
rlist[[i]] <- var.info
}
table( flevels ) %>% kable( format="html" )
table( flevels ) %>% kable( format="pipe" )
flevels
table( flevels ) %>% kable( format="latex" )
table( flevels ) %>% kable( format="pipe" )
flevels$FLEVEL
flevels$LABEL
grr<-as.vector( flevels$FLEVEL )
grr
len(grr)
length(grr)
grr2<-as.list( flevels$FLEVEL )
length(grr2)
grr3<-as.vector(grr2)
length(grr3)
table( flevels$FLEVEL ) %>% kable()
table( flevels$FLEVEL ) %>% kable( format="html" )
to_table <- function( f, format="html" )
{
t <- table( flevels )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels
to_table( f, format="pipe" )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
# use this generic table for the factor levels
flevels <-
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")
to_table <- function( f, format="html" )
{
t <- table( flevels )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels
# create div4
create_div4 <- function (vdesc, lcode)
{
v <-
tagList(
div( class="div4", withTags(
table(
tr(
td( "DESCRIPTION: " ),
td( vdesc )
),
tr(
td( "VARIABLE LEVELS: "),
),
tr(
table(
td( to_table( f, format="html" ) ) )
#   table( flevels$FLEVEL ) %>% kable( format="html" ) ),
#  td( table( flevels$LABEL ) %>% kable( format="html" ) ) )
#  td( "boo" ),
#  td( "hiss" ) )
),
tr(
td( "LOCATION CODE: " ),
td( lcode )
)
)
) )
)
return(v)
}
#| output: asis
rlist <- list()
for( i in 1:nrow(d) )
{
vdesc   <- d$DESCRIPTION[i]
lcode   <- d$LOCATION_CODE_FAMILY[i]
var.info <-
create_div4( vdesc=vdesc,
lcode=lcode)
rlist[[i]] <- var.info
}
renderTags( rlist )$html
to_table( f, format="html" )
to_table( f, format="pipe" )
to_table <- function( f, format="html" )
{
t <- table( flevels$FLEVEL )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels$FLEVEL
to_table( f, format="pipe" )
to_table( f, format="pipe" )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )
# use this generic table for the factor levels
flevels <-
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas",
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")
to_table <- function( f, format="html" )
{
t <- table( flevels )
t2 <- as.data.frame(t)
names(t2) <- c("Level","Label")
t2 %>% kable( format )
}
f <- flevels
# create div4
create_div4 <- function (vdesc, lcode)
{
v <-
tagList(
div( class="div4", withTags(
table(
tr(
td( "DESCRIPTION: " ),
td( vdesc )
),
tr(
td( "VARIABLE LEVELS: "),
),
tr(
table(
td( to_table( f, format="pipe" ) ) )
#   table( flevels$FLEVEL ) %>% kable( format="html" ) ),
#  td( table( flevels$LABEL ) %>% kable( format="html" ) ) )
),
tr(
td( "LOCATION CODE: " ),
td( lcode )
)
)
) )
)
return(v)
}
to_table( f, format="pipe" )
