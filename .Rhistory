),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  )
) )
print( v.layout )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
d <- dplyr::sample_n( dat, 25 )
vname    <- "F9_00_ALL_AFFIL_INCL_X"
vlabel  <- "All subordinates included"
vtype    <- "checkbox"
vscope   <- "HD"
vdesc    <- "Indicates this form includes all subordinate organizations"
v.layout <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel)  ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  )
) )
print( v.layout )
vname    <- "F9_00_ALL_AFFIL_INCL_X"
vlabel  <- "All subordinates included"
vtype    <- "checkbox"
vscope   <- "HD"
vdesc    <- "Indicates this form includes all subordinate organizations"
v.layout <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel)  ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  )
) )
print( v.layout )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
d <- dplyr::sample_n( dat, 25 )
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc )
{
v <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel )  ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v( vname, vlabel, vtype, vscope, vdesc )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
d <- dplyr::sample_n( dat, 25 )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
d <- dplyr::sample_n( dat, 25 )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
d <- dplyr::sample_n( dat, 25 )
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc )
{
v <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel )  ),
div( class="div3", withTags(
table(
tr(
td( "VARNAME" )
),
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v( vname, vlabel, vtype, vscope, vdesc )
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel )  ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) )  )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v( vname, vlabel, vtype, vscope, vdesc, lcode )
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )
# remove special characters that will
# wreck table formatting like ($)
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )
# use location codes if family code is missing
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <-
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]
d <- dplyr::sample_n( dat, 25 )
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel )  ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) )  )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v( vname, vlabel, vtype, vscope, vdesc, lcode )
#| output: asis
rlist <- list()
for( i in 1:25 )
{
namev   <- d$VARIABLE_NAME[i]
labelv  <- d$LABEL[i]
dts     <- d$DATA_TYPE_SIMPLE[i]
scopev  <- d$VARIABLE_SCOPE[i]
descr   <- d$DESCRIPTION[i]
lcode   <- d$LOCATION_CODE_FAMILY[i]
var.info <-
containerize_v( vname=namev,
vlabel=labelv,
vtype=dts,
vscope=scopev,
vdesc=descr,
lcode=lcode)
rlist[[i]] <- var.info
}
renderTags( rlist )$html
exists(vname)
#| output: asis
rlist <- list()
for( i in 1:25 )
{
vname   <- d$VARIABLE_NAME[i]
vlabel  <- d$LABEL[i]
vtype     <- d$DATA_TYPE_SIMPLE[i]
vscope  <- d$VARIABLE_SCOPE[i]
vdesc   <- d$DESCRIPTION[i]
lcode   <- d$LOCATION_CODE_FAMILY[i]
var.info <-
containerize_v( vname=vname,
vlabel=vlabel,
vtype=vtype,
vscope=vscope,
vdesc=vdesc,
lcode=lcode)
rlist[[i]] <- var.info
}
renderTags( rlist )$html
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel )  ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) )  )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v( vname, vlabel, vtype, vscope, vdesc, lcode )
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div2", p( vlabel )  ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) )  ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) )  )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v( vname, vlabel, vtype, vscope, vdesc, lcode )
#| output: asis
v.layout
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel ) ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) ) ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) ) )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", h4( vname ) ),
div( class="div2", p( vlabel ) ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) ) ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) ) )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v( vname, vlabel, vtype, vscope, vdesc, lcode )
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", p( paste0( vname, ".........." )) ),
div( class="div2", p( vlabel ) ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) ) ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) ) )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
<span style="color:dark orange"> "LOCATION CODE"</span>
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", p( paste0( vname, ".........." )) ),
div( class="div2", p( vlabel ) ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE"  ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) ) ),
div( class="div5", p( paste0( "LOCATION CODE: ", lcode ) ) )
),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", p( paste0( vname, ".........." )) ),
div( class="div2", p( vlabel ) ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE" ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) ) ),
div( class="div5", withTags(
table(
tr(
td1( "LOCATION CODE: " ),
td2( lcode )
)
)
) ) ),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", p( paste0( vname, ".........." )) ),
div( class="div2", p( vlabel ) ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE" ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) ) ),
div( class="div5", withTags(
table(
tr(
td( class="div6", "LOCATION CODE: " ),
td( lcode )
)
)
) ) ),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
containerize_v <- function( vname, vlabel, vtype, vscope, vdesc, lcode )
{
v <-
tagList(
div( class="parent",
div( class="div1", p( paste0( vname, ".........." )) ),
div( class="div2", p( vlabel ) ),
div( class="div3", withTags(
table(
tr(
td( "DATA TYPE" ),
td( vtype  )
),
tr(
td( "SCOPE"  ),
td( vscope  )
)
)
) ),
div( class="div4", p( paste0( "DESCRIPTION: ", vdesc ) ) ),
div( class="div5", withTags(
table(
tr(
td( class="div6", p( "LOCATION CODE: " ) ),
td( lcode )
)
)
) ) ),
withTags(  HTML("<br><hr><br>"), p('\n')  )
)
return(v)
}
