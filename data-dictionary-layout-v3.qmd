---
title: "Data Dictionary"
format:
  html:
    embed-resources: true
editor: visual
---

<br><br><br>

```{r, warning=F, message=F, include=F}
library( htmltools )
library( dplyr )
library( pointblank )
library( knitr )
```

```{r, include=F}
dat <- read.csv( "concordance-v98.csv" )
names( dat ) <- toupper( names( dat ) )

# remove special characters that will 
# wreck table formatting like ($) 
dat$DESCRIPTION <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$DESCRIPTION )
dat$LABEL <- gsub( "\\(\\$\\)[ ]{0,1}", "", dat$LABEL )

# use location codes if family code is missing 
dat$LOCATION_CODE_FAMILY[ is.na(dat$LOCATION_CODE_FAMILY) ] <- 
dat$LOCATION_CODE[ is.na(dat$LOCATION_CODE_FAMILY) ]

# select the form and part you want
forms <- "SCHED-A" #type the form or schedule here
part <- "PART-01" #type the part here
d <- dat %>% filter ( FORM == forms & FORM_PART == part )

# use this generic table for the factor levels
flevels <- 
structure(list(FLEVEL = c("AL", "AK", "AZ", "AR", "CA", "CO"
), LABEL = c("Alabama", "Alaska", "Arizona", "Arkansas", 
"California", "Colorado")), row.names = c(NA, 6L), class = "data.frame")

to_table <- function( f, format="html" )
            {
              t <- table( flevels )
              t2 <- as.data.frame(t)
              names(t2) <- c("Level","Label")
              t2 %>% kable( format )
            }
f <- flevels

# create div4
create_div4 <- function (vdesc, lcode)
{
  v <- 
  tagList(
      div( class="div4", withTags(
        table(
                tr(
                    td( "DESCRIPTION: " ),
                    td( vdesc )
                  ),
                tr(
                    td( "VARIABLE LEVELS: "),
                  ),
                tr(
                    table( 
                          td( to_table( f, format="html" ) ) )
                  ),
                tr(
                    td( "LOCATION CODE: " ),
                    td( lcode )
                  )
             )
    ) )
    )
  return(v)
}
```

```{r, results="asis", echo=F}
#| output: asis

rlist <- list()

for( i in 1:nrow(d) )
{
  vdesc   <- d$DESCRIPTION[i]
  lcode   <- d$LOCATION_CODE_FAMILY[i]
  
  var.info <- 
  create_div4( vdesc=vdesc,
               lcode=lcode) 

  rlist[[i]] <- var.info

}

renderTags( rlist )$html
```

<link href='https://fonts.googleapis.com/css?family=Fira Code' rel='stylesheet'> <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Anonymous+Pro" />

```{=html}
<style>

@import url('https://fonts.cdnfonts.com/css/aharoni');

.parent {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: auto;
    grid-column-gap: 5px;
    grid-row-gap: 5px;
    grid-template-areas:
      "a b b"
      "c d d"
      ". e e" ;
}

.div1 {
    grid-area: a;
    padding-left: 5px;
}

.div2 { 
    grid-area: b;
    padding-left: 5px;
}

.div3 { 
    grid-area: c;
    padding-left: 5px;
}

.div4 { 
    grid-area: d;
    padding-left: 5px;
}

.div1 p { 
    font-family:"Calibri", sans-serif;
    color: orange;
    font-size: 1em;
}

.div2 p { 
    font-family:"Calibri", sans-serif;
    color: orange;
    font-size: 1em;
}

.div3 table { width: 100%; }

.div3 td { 
    font-family:"Calibri", sans-serif;
    font-size: 1em;
}

.div4 table { width: 100%; }

.div4 td { 
    font-family:"Calibri", sans-serif;
    font-size: 1em;
}

h2 { 
    font-family:"Calibri", sans-serif;
    font-size: 2em;
    background-color: gray;
    color: white;
}

.table>tbody {
    border-top: none;
}

.table>:not(caption)>*>* {
    padding: 0rem 0rem;
}

tbody, tfoot, tr, td, th {
    border-color: inherit;
    border-style: none; 
    border-width: 0;
}

#pb_agent .gt_table {
    border-top-width: 0px; 
    /* border-top-color: #A8A8A8; */
}  

#pb_agent .gt_title {
    font-size: 1.3em !important;
}

#pb_agent .gt_left { color: black !important; }

</style>
```
